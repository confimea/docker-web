version: '3.8'

services:

  traefik:
    image: traefik:${TRAEFIK_VERSION}
    ports:
      - ${TRAEFIK_PORT}:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik`)
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode
      - --entrypoints.http.address=:80
      - --accesslog
      - --log
      - --api
    networks:
      - traefik

  traefik_dashboard:
    image: traefik:${TRAEFIK_VERSION}
    deploy:
      labels:
        - traefik.constraint-label=traefik
        - traefik.docker.network=traefik
        - traefik.enable=true
        - traefik.http.routers.traefik.entrypoints=http
        - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.services.traefik.loadbalancer.server.port=8080
    networks:
      - traefik

  portainer:
    image: portainer/portainer-ee:${PORTAINER_VERSION}
    command: -H tcp://tasks.portainer_agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - portainer
      - traefik
    deploy:
      labels:
        - traefik.constraint-label=traefik
        - traefik.docker.network=traefik
        - traefik.enable=true
        - traefik.http.routers.portainer_http.entrypoints=http
        - traefik.http.routers.portainer_http.rule=Host(`portainer.localhost`)
        - traefik.http.services.portainer.loadbalancer.server.port=9000
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  portainer_agent:
    image: portainer/agent:${PORTAINER_AGENT_VERSION}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

networks:
  portainer:
    attachable: true
  traefik:
    external: true

volumes:
  portainer_data:
